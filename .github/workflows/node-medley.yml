name: node-medley native module
on:
  workflow_dispatch:
  push:
    tags:
      - node-medley@*.*
jobs:
  # This job builds on each platform directly
  build:
    strategy:
      matrix:
        include:
          - runs-on: windows-latest
            node_version: 20.18.0
            node_arch: x64
            build-arch: win32-x64

          - runs-on: macos-14
            node_version: 20.18.0
            node_arch: arm64
            build-arch: darwin-arm64

          # macos-14 runner is arm64, use macos-13 instead
          - runs-on: macos-13
            node_version: 20.18.0
            node_arch: x64
            build-arch: darwin-x64

    name: Build ${{ matrix.build-arch }}
    runs-on: ${{ matrix.runs-on }}
    env:
      BUILD_ARCH: ${{ matrix.build-arch }}
      DEPS_INSTALL: ./packages/node-medley/scripts/install-deps.sh
      HUSKY: 0
    steps:
      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          architecture: ${{ matrix.node_arch }}

      - uses: pnpm/action-setup@v4
        with:
          version: 10.7.0

      - name: Make sure pnpm fetch Node
        shell: bash
        run: |
          pnpm &>/dev/null || true

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-${{ runner.arch }}-pnpm-store-native-build
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-pnpm-store-native-build

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive


      - name: Install Dependencies (Darwin)
        if: contains(matrix.build-arch, 'darwin')
        run: |
          brew install utf8cpp opus opusfile

      - name: Build Dependencies
        if: contains(matrix.build-arch, 'darwin')
        run: |
          mkdir -p ./build/deps
          cp ${{ env.DEPS_INSTALL }} ./build/deps/
          cd ./build/deps
          sh install-deps.sh

      - name: Cache vcpkg
        if: contains(matrix.build-arch, 'win32')
        uses: actions/cache@v4
        with:
          path: |
            C:\vcpkg\packages
            C:\vcpkg\installed
          key: windows-build-vcpkg-cache

      - name: Install Dependencies (Windows)
        if: contains(matrix.build-arch, 'win32')
        run: |
          vcpkg integrate install
          vcpkg install libsamplerate:x64-windows-static taglib:x64-windows-static zlib:x64-windows-static opus:x64-windows-static opusfile:x64-windows-static

      - name: Prepare
        working-directory: ./packages/node-medley
        run: |
          pnpm install --no-frozen-lockfile --ignore-scripts

      - name: Build native
        working-directory: ./packages/node-medley
        run: |
          pnpm prebuild

      - name: Test prebuilt module
        working-directory: ./packages/node-medley
        run: |
          pnpm test

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build-arch }}
          path: ./packages/node-medley/prebuilds

  build-linux:
    strategy:
      matrix:
        include:
          - build-arch: linux-x64
            platform: linux/amd64
            runs-on: ubuntu-latest

          - build-arch: linux-arm64
            platform: linux/arm64
            runs-on: [self-hosted, macOS, ARM64, docker]


    name: Build ${{ matrix.build-arch }}
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build native
        working-directory: ./packages/node-medley
        env:
          ephemeral_container_id: node-medley-prebuild-${{ github.run_id }}-${{ github.run_attempt }}
        run: |
          docker build \
            --platform=${{ matrix.platform }} \
            -f ./builder/linux/Dockerfile \
            --progress=plain \
            -t node-medley-prebuild ../.. && \
          docker container create \
            --name ${{ env.ephemeral_container_id }} node-medley-prebuild && \
          docker cp \
            ${{ env.ephemeral_container_id }}:/src/packages/node-medley/prebuilds ./ && \
          docker rm ${{ env.ephemeral_container_id }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build-arch }}
          path: ./packages/node-medley/prebuilds
