/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './root'
import { Route as layoutRouteImport } from './layout'
import { Route as djLayoutRouteImport } from './dj/layout'
import { Route as homeHomePageRouteRouteImport } from './home/HomePage/route'
import { Route as playPlayPageRouteRouteImport } from './play/PlayPage/route'
import { Route as djDJConsolePageRouteRouteImport } from './dj/DJConsolePage/route'
import { Route as djCollectionPageRouteRouteImport } from './dj/CollectionPage/route'

const DjRouteImport = createFileRoute('/dj')()

const DjRoute = DjRouteImport.update({
  id: '/dj',
  path: '/dj',
  getParentRoute: () => rootRouteImport,
} as any)
const layoutRoute = layoutRouteImport.update({
  id: '/_normal-layout',
  getParentRoute: () => rootRouteImport,
} as any)
const djLayoutRoute = djLayoutRouteImport.update({
  id: '/_dj-layout',
  getParentRoute: () => DjRoute,
} as any)
const homeHomePageRouteRoute = homeHomePageRouteRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => layoutRoute,
} as any)
const playPlayPageRouteRoute = playPlayPageRouteRouteImport.update({
  id: '/play/$station',
  path: '/play/$station',
  getParentRoute: () => layoutRoute,
} as any)
const djDJConsolePageRouteRoute = djDJConsolePageRouteRouteImport.update({
  id: '/$station/',
  path: '/$station/',
  getParentRoute: () => djLayoutRoute,
} as any)
const djCollectionPageRouteRoute = djCollectionPageRouteRouteImport.update({
  id: '/$station/collection/$collectionId',
  path: '/$station/collection/$collectionId',
  getParentRoute: () => djLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof homeHomePageRouteRoute
  '/dj': typeof djLayoutRouteWithChildren
  '/play/$station': typeof playPlayPageRouteRoute
  '/dj/$station': typeof djDJConsolePageRouteRoute
  '/dj/$station/collection/$collectionId': typeof djCollectionPageRouteRoute
}
export interface FileRoutesByTo {
  '/': typeof homeHomePageRouteRoute
  '/dj': typeof djLayoutRouteWithChildren
  '/play/$station': typeof playPlayPageRouteRoute
  '/dj/$station': typeof djDJConsolePageRouteRoute
  '/dj/$station/collection/$collectionId': typeof djCollectionPageRouteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_normal-layout': typeof layoutRouteWithChildren
  '/_normal-layout/': typeof homeHomePageRouteRoute
  '/dj': typeof DjRouteWithChildren
  '/dj/_dj-layout': typeof djLayoutRouteWithChildren
  '/_normal-layout/play/$station': typeof playPlayPageRouteRoute
  '/dj/_dj-layout/$station/': typeof djDJConsolePageRouteRoute
  '/dj/_dj-layout/$station/collection/$collectionId': typeof djCollectionPageRouteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dj'
    | '/play/$station'
    | '/dj/$station'
    | '/dj/$station/collection/$collectionId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dj'
    | '/play/$station'
    | '/dj/$station'
    | '/dj/$station/collection/$collectionId'
  id:
    | '__root__'
    | '/_normal-layout'
    | '/_normal-layout/'
    | '/dj'
    | '/dj/_dj-layout'
    | '/_normal-layout/play/$station'
    | '/dj/_dj-layout/$station/'
    | '/dj/_dj-layout/$station/collection/$collectionId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  layoutRoute: typeof layoutRouteWithChildren
  DjRoute: typeof DjRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dj': {
      id: '/dj'
      path: '/dj'
      fullPath: '/dj'
      preLoaderRoute: typeof DjRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_normal-layout': {
      id: '/_normal-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof layoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dj/_dj-layout': {
      id: '/dj/_dj-layout'
      path: '/dj'
      fullPath: '/dj'
      preLoaderRoute: typeof djLayoutRouteImport
      parentRoute: typeof DjRoute
    }
    '/_normal-layout/': {
      id: '/_normal-layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof homeHomePageRouteRouteImport
      parentRoute: typeof layoutRoute
    }
    '/_normal-layout/play/$station': {
      id: '/_normal-layout/play/$station'
      path: '/play/$station'
      fullPath: '/play/$station'
      preLoaderRoute: typeof playPlayPageRouteRouteImport
      parentRoute: typeof layoutRoute
    }
    '/dj/_dj-layout/$station/': {
      id: '/dj/_dj-layout/$station/'
      path: '/$station'
      fullPath: '/dj/$station'
      preLoaderRoute: typeof djDJConsolePageRouteRouteImport
      parentRoute: typeof djLayoutRoute
    }
    '/dj/_dj-layout/$station/collection/$collectionId': {
      id: '/dj/_dj-layout/$station/collection/$collectionId'
      path: '/$station/collection/$collectionId'
      fullPath: '/dj/$station/collection/$collectionId'
      preLoaderRoute: typeof djCollectionPageRouteRouteImport
      parentRoute: typeof djLayoutRoute
    }
  }
}

interface layoutRouteChildren {
  homeHomePageRouteRoute: typeof homeHomePageRouteRoute
  playPlayPageRouteRoute: typeof playPlayPageRouteRoute
}

const layoutRouteChildren: layoutRouteChildren = {
  homeHomePageRouteRoute: homeHomePageRouteRoute,
  playPlayPageRouteRoute: playPlayPageRouteRoute,
}

const layoutRouteWithChildren =
  layoutRoute._addFileChildren(layoutRouteChildren)

interface djLayoutRouteChildren {
  djDJConsolePageRouteRoute: typeof djDJConsolePageRouteRoute
  djCollectionPageRouteRoute: typeof djCollectionPageRouteRoute
}

const djLayoutRouteChildren: djLayoutRouteChildren = {
  djDJConsolePageRouteRoute: djDJConsolePageRouteRoute,
  djCollectionPageRouteRoute: djCollectionPageRouteRoute,
}

const djLayoutRouteWithChildren = djLayoutRoute._addFileChildren(
  djLayoutRouteChildren,
)

interface DjRouteChildren {
  djLayoutRoute: typeof djLayoutRouteWithChildren
}

const DjRouteChildren: DjRouteChildren = {
  djLayoutRoute: djLayoutRouteWithChildren,
}

const DjRouteWithChildren = DjRoute._addFileChildren(DjRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  layoutRoute: layoutRouteWithChildren,
  DjRoute: DjRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
