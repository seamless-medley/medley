{
  "name": "@seamless-medley/medley",
  "description": "Audio engine for Node.js, with built-in \"radio like\" gapless/seamless playback",
  "version": "0.5.3-glibc.1",
  "author": {
    "name": "Wittawas Nakkasem",
    "email": "vittee@hotmail.com",
    "url": "https://github.com/vittee"
  },
  "license": "GPL-3.0",
  "keywords": [
    "medley",
    "juce",
    "dj",
    "radio",
    "seamless",
    "gapless",
    "segue"
  ],
  "homepage": "https://github.com/seamless-medley/medley/tree/main/packages/node-medley",
  "repository": "https://github.com/seamless-medley/medley",
  "main": "src/index.ts",
  "types": "src/index.d.ts",
  "scripts": {
    "preinstall": "(exit 0)",
    "clean": "rimraf build out dist",
    "build:js": "tsc",
    "prebuild": "cross-env JOBS=max prebuildify -t 18.0.0 --tag-libc --napi --strip",
    "prebuild:linux": "docker build -f ./builder/linux/Dockerfile --progress=plain -t node-medley-prebuild ../.. && docker container create --name node-medley-prebuild-cp node-medley-prebuild && docker cp node-medley-prebuild-cp:/src/packages/node-medley/prebuilds ./ && docker rm node-medley-prebuild-cp",
    "prebuild:linux-arm64": "docker build --platform=linux/arm64 -f ./builder/linux/Dockerfile --progress=plain -t node-medley-prebuild ../.. && docker container create --name node-medley-prebuild-cp node-medley-prebuild && docker cp node-medley-prebuild-cp:/src/packages/node-medley/prebuilds ./ && docker rm node-medley-prebuild-cp",
    "test": "ava",
    "package": "tsx scripts/package.ts",
    "bump-version": "tsx scripts/bump.ts",
    "demo": "cross-env DEBUG=1 MEDLEY_DEV=1 tsx test/demo.ts"
  },
  "gypfile": true,
  "dependencies": {
    "node-gyp-build": "^4.6.1"
  },
  "devDependencies": {
    "@ava/typescript": "^5.0.0",
    "@types/semver": "^7.5.4",
    "ava": "^6.1.3",
    "cross-env": "^7.0.3",
    "node-addon-api": "8.2.1",
    "node-gyp": "^10.0.1",
    "prebuildify": "^6.0.1",
    "rimraf": "^6.0.1",
    "semver": "^7.5.4",
    "tsx": "^4.6.2",
    "typescript": "5.4.5"
  },
  "ava": {
    "files": [
      "test/test.ts"
    ],
    "require": [
      "test/_force-exit.mjs"
    ],
    "environmentVariables": {
      "NODE_NO_WARNINGS": "1",
      "MEDLEY_DEV": "1"
    },
    "typescript": {
      "rewritePaths": {},
      "compile": false
    },
    "nodeArguments": [
      "--import=tsx"
    ]
  }
}
